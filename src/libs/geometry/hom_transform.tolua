
/***************************************************************************
 *  hom_transform.h - Homogenous affine transformation - tolua++ template
 *
 *  Created: Sat Apr 11 16:16:58 2009
 *  Copyright  2009  Daniel Beck
 *
 *  $Id: hom_transform.h 1944 2009-03-03 01:21:18Z tim $
 *
 ****************************************************************************/

/*  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version. A runtime exception applies to
 *  this software (see LICENSE.GPL_WRE file mentioned below for details).
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Library General Public License for more details.
 *
 *  Read the full text in the LICENSE.GPL_WRE file in the doc directory.
 */

$#include <geometry/hom_transform.h>
$#include <geometry/matrix.h>
$#include <geometry/hom_vector.h>
$#include <geometry/hom_point.h>
$#include <geometry/hom_pose_2d.h>

namespace fawkes {

class HomTransform
{
  HomTransform();
  HomTransform(const HomTransform& ht);
  HomTransform(const fawkes::Matrix& m);
  virtual ~HomTransform();

  HomTransform& reset();
  virtual HomTransform& invert();
  virtual HomTransform  get_inverse();

  void rotate_x(float rad);
  void rotate_y(float rad);
  void rotate_z(float rad);

  void trans(float dx, float dy, float dz = 0.0);
  void set_trans(float x, float y, float z = 0.0);

  void mDH(const float alpha, const float a, const float theta, const float d);

  fawkes::HomVector    operator*( const fawkes::HomVector& v ) const;
  fawkes::HomPoint     operator*( const fawkes::HomPoint& p ) const;
  fawkes::HomPose2d    operator*( const fawkes::HomPose2d& p ) const;

  bool operator==(const HomTransform& t) const;
  
  void print_info( const char* name = 0,
		   const char* col_sep = 0,
		   const char* row_sep = 0 ) const;

  const fawkes::Matrix& get_matrix() const;
};
 
} // end namespace fawkes
